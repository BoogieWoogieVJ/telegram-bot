# db/models.py

# --- –∏–º–ø–æ—Ä—Ç—ã –∏–∑ SQLAlchemy ---
from sqlalchemy import (
    Column,               # –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤
    Integer,              # —Ç–∏–ø INTEGER
    BigInteger,           # –±–æ–ª—å—à–æ–π —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π —Ç–∏–ø (–¥–ª—è Telegram user_id)
    String,               # —Å—Ç—Ä–æ–∫–∞ —Ñ–∏–∫—Å/–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
    Text,                 # –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    DateTime,             # —Ç–∏–ø –¥–∞—Ç—ã/–≤—Ä–µ–º–µ–Ω–∏
    ForeignKey,           # –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
    func,                 # SQL-—Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, NOW())
    Index,                # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
)
from sqlalchemy.orm import relationship  # —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ (ORM-–æ—Ç–Ω–æ—à–µ–Ω–∏—è)

# --- –Ω–∞—à –æ–±—â–∏–π Base –∏–∑ db/base.py ---
from .base import Base


# =========================
#   –¢–∞–±–ª–∏—Ü–∞ users
# =========================
class User(Base):
    __tablename__ = "users"                 # –∏–º—è —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î

    # Telegram user_id. –û–Ω —É–∂–µ int –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–æ–π ‚Üí BigInteger.
    id = Column(BigInteger, primary_key=True)

    # username –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω (–º–æ–∂–µ—Ç –±—ã—Ç—å None), –ø–æ—ç—Ç–æ–º—É nullable=True –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
    username = Column(String(255))

    # –∫–æ–≥–¥–∞ –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞. server_default=func.now() ‚Äî –≤—Ä–µ–º—è –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç —Å–∞–º–∞ –ë–î.
    created_at = Column(DateTime, server_default=func.now())


# =========================
#   –¢–∞–±–ª–∏—Ü–∞ notes
# =========================
class Note(Base):
    __tablename__ = "notes"

    id = Column(Integer, primary_key=True)

    # –≤–ª–∞–¥–µ–ª–µ—Ü –∑–∞–º–µ—Ç–∫–∏
    user_id = Column(BigInteger, ForeignKey("users.id", ondelete="CASCADE"), nullable=False)

    # –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏ (—Ä–æ–≤–Ω–æ –∫–∞–∫ –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    text = Column(Text, nullable=False)

    # ‚Üê –ù–û–í–û–ï –ü–û–õ–ï: –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –ò–ò (–Ω–∞–ø—Ä–∏–º–µ—Ä: "üõí –ü–æ–∫—É–ø–∫–∏")
    category = Column(String(100), nullable=True, default=None)

    # –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç –ò–ò: –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø–æ—è—Å–Ω–µ–Ω–∏—è, –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    description = Column(Text, nullable=True)

    # —Å—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏: "active" –∏–ª–∏ "archived"
    status = Column(String(20), nullable=False, default="active")

    # –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è (—Å—Ç–∞–≤–∏—Ç –ë–î)
    created_at = Column(DateTime, server_default=func.now())

    # ORM-—Å–≤—è–∑—å –∫ User
    user = relationship("User")


# =========================
#   –ò–Ω–¥–µ–∫—Å—ã
# =========================

# –ß–∞—Å—Ç—ã–π –∑–∞–ø—Ä–æ—Å: "–¥–∞–π –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è".
# –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ (user_id, created_at DESC) —É—Å–∫–æ—Ä–∏—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É/—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é.
Index("ix_notes_user_created", Note.user_id, Note.created_at.desc())

# ‚Üê –ù–û–í–û–ï: –ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
Index("ix_notes_category", Note.user_id, Note.category)